<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.8.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.huangxj.base</groupId>
    <artifactId>huangxj-base</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <name>huangxj-base</name>
    <description></description>
    <packaging>pom</packaging>

    <modules>
        <module>base-application</module>
        <module>base-common</module>
        <module>base-system</module>
        <module>base-ui</module>
        <module>base-miniapp</module>
    </modules>

    <properties>
        <version>1.0.0-SNAPSHOT</version>
        <docker.image.prefix>huangxj</docker.image.prefix>
        <my.project.version>1.0.0-SNAPSHOT</my.project.version>
        <java.version>11</java.version>
        <project.root>${basedir}</project.root>
        <spring-boot.version>2.1.4.RELEASE</spring-boot.version>
        <mybatis-plus.version>3.2.0</mybatis-plus.version>
        <swagger2.version>2.8.0</swagger2.version>
        <fastjson.version>1.2.36</fastjson.version>
        <qcloudsms.version>1.0.6</qcloudsms.version>
        <sharding-sphere.version>4.0.1</sharding-sphere.version>
        <druid.version>1.1.18</druid.version>
        <weixin-java-miniapp.version>3.7.0</weixin-java-miniapp.version>
        <hutool.version>5.2.5</hutool.version>
        <!--apache-->
        <apache.commons-lang3.version>3.5</apache.commons-lang3.version>
        <apache.commons-io.version>2.5</apache.commons-io.version>
        <apache.commons.beanutils>1.9.3</apache.commons.beanutils>
        <apache.poi.verison>4.1.2</apache.poi.verison>

        <!-- 推荐使用Harbor -->
        <docker.registry.url>192.168.2.248</docker.registry.url>
        <docker.registry.host>http://${docker.registry.url}:2375</docker.registry.host>
        <docker.plugin.version>1.2.0</docker.plugin.version>
    </properties>

    <!--    mvn clean package -Dmaven.test.skip=true -Pdev-->
    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!--环境-->
                <profile.name>dev</profile.name>
            </properties>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <!--当前环境-->
                <profile.name>prod</profile.name>
            </properties>
        </profile>
        <profile>
            <id>test</id>
            <properties>
                <!--当前环境-->
                <profile.name>test</profile.name>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>wagon-maven-plugin</artifactId>
                        <configuration>
                            <fromFile>docker-compose.yaml</fromFile>
                        </configuration>
                        <inherited>false</inherited>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>upload-single</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <finalName>${project.artifactId}</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*</include>
                </includes>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
            </resource>
        </resources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>wagon-maven-plugin</artifactId>
                    <version>2.0.0</version>
                    <configuration>
                        <url>scp://root:huangxj123456@192.168.2.248/docker/huangxj-base</url>
                    </configuration>
                    <executions>
                        <execution>
                            <id>build-docker</id>
                            <phase>none</phase>
                            <goals>
                                <goal>upload</goal>
                                <goal>sshexec</goal>
                            </goals>
                            <configuration>
                                <fromDir>${project.basedir}</fromDir>
                                <includes>target/${project.artifactId}.jar,Dockerfile</includes>
                                <toDir>/${project.artifactId}</toDir>
                                <commands>
                                    <command>docker-compose -f /docker/huangxj-base/docker-compose.yaml rm -f ${project.artifactId}</command>
                                    <command>
                                        cd /docker/huangxj-base/${project.artifactId}
                                        docker build -t huangxj/${project.artifactId} .
                                    </command>
                                    <command>docker-compose -f /docker/huangxj-base/docker-compose.yaml up -d --force-recreate ${project.artifactId}</command>
                                </commands>
                            </configuration>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.maven.wagon</groupId>
                            <artifactId>wagon-ssh</artifactId>
                            <version>3.0.0</version>
                        </dependency>
                    </dependencies>
                </plugin>

                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                </plugin>

            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>UTF-8</encoding>
                    <compilerArgs>
                        <arg>-parameters</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>aliyun-repos</id>
            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>aliyun-plugin</id>
            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.huangxj.base</groupId>
                <artifactId>base-common</artifactId>
                <version>${version}</version>
            </dependency>
            <dependency>
                <groupId>com.huangxj.base</groupId>
                <artifactId>base-ui-admin</artifactId>
                <version>${version}</version>
            </dependency>
            <dependency>
                <groupId>com.huangxj.base</groupId>
                <artifactId>base-system-service</artifactId>
                <version>${version}</version>
            </dependency>
            <dependency>
                <groupId>com.huangxj.base</groupId>
                <artifactId>base-system-web</artifactId>
                <version>${version}</version>
            </dependency>
            <dependency>
                <groupId>com.huangxj.base</groupId>
                <artifactId>base-miniapp-service</artifactId>
                <version>${version}</version>
            </dependency>
            <dependency>
                <groupId>com.huangxj.base</groupId>
                <artifactId>base-miniapp-web</artifactId>
                <version>${version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!--Spring-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-undertow</artifactId>
        </dependency>

<!--        <dependency>-->
<!--            <groupId>org.springframework.boot</groupId>-->
<!--            <artifactId>spring-boot-starter-actuator</artifactId>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>org.springframework.boot</groupId>-->
<!--            <artifactId>spring-boot-devtools</artifactId>-->
<!--            <scope>runtime</scope>-->
<!--            <optional>true</optional>-->
<!--        </dependency>-->
        <!-- security -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.springframework.security.oauth/spring-security-oauth2 -->
        <dependency>
            <groupId>org.springframework.security.oauth</groupId>
            <artifactId>spring-security-oauth2</artifactId>
            <version>2.3.5.RELEASE</version>
        </dependency>

        <!-- 消息总线rabbitMQ -->
<!--        <dependency>-->
<!--            <groupId>org.springframework.boot</groupId>-->
<!--            <artifactId>spring-boot-starter-amqp</artifactId>-->
<!--        </dependency>-->

        <!--MyBatis-->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
            <version>${mybatis-plus.version}</version>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>

        <!--swagger-->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${swagger2.version}</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${swagger2.version}</version>
        </dependency>
        <!-- java8 不需要添加，高版本需要添加 -->
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.3.0</version>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
            <version>2.3.0</version>
        </dependency>
        <dependency>
            <groupId>javax.activation</groupId>
            <artifactId>activation</artifactId>
            <version>1.1.1</version>
        </dependency>
        <!-- java8 不需要添加，高版本需要添加 -->


        <!--        apache-->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${apache.commons-lang3.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${apache.commons-io.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>${apache.commons.beanutils}</version>
        </dependency>

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>${apache.poi.verison}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>${apache.poi.verison}</version>
        </dependency>
        <!--        apache-->

        <!-- 用于腾讯云发送验证码短信 -->
        <dependency>
            <groupId>com.github.qcloudsms</groupId>
            <artifactId>qcloudsms</artifactId>
            <version>${qcloudsms.version}</version>
        </dependency>

        <!-- Spring Boot Aop 依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

        <!-- shardingsphere-->
        <dependency>
            <groupId>org.apache.shardingsphere</groupId>
            <artifactId>sharding-jdbc-spring-boot-starter</artifactId>
            <version>${sharding-sphere.version}</version>
        </dependency>

        <dependency>
            <groupId>com.github.binarywang</groupId>
            <artifactId>weixin-java-miniapp</artifactId>
            <version>${weixin-java-miniapp.version}</version>
        </dependency>

        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>${hutool.version}</version>
        </dependency>

    </dependencies>
</project>
